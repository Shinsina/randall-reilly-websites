import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import queryFragment from "../../graphql/fragments/top-stories-block";
// import TopStoriesCarousel from "../../browser/top-stories-carousel.vue"

$ const queryParams = {
  limit: 4,
  requiresImage: true,
  queryFragment,
  sectionAlias: "home",
  ...input.queryParams,
};
$ const blockName = "top-stories-carousel";
$ const withHeader = defaultValue(input.withHeader, true);
$ const withNativeX = defaultValue(input.withNativeX, true);

$ function increment() {
    setInterval(function() {
        if(state.heroNodeIndex !== state.heroNodeMaxIndex){
          state.heroNodeIndex++;
          let heroNode = state.nodesArr.slice(0, state.nodesArr.length)[state.heroNodeIndex];
          let heroImageNode = {
          id: heroNode.id,
          type: heroNode.type,
          siteContext: heroNode.siteContext,
          primaryImage: heroNode.primaryImage,
        };
        state.heroNodeObj = heroNode;
        state.heroNodeImageObj = heroImageNode;
        }
        else {
          state.heroNodeIndex = 0;
          let heroNode = state.nodesArr.slice(0, state.nodesArr.length)[state.heroNodeIndex];
          let heroImageNode = {
          id: heroNode.id,
          type: heroNode.type,
          siteContext: heroNode.siteContext,
          primaryImage: heroNode.primaryImage,
        };
        state.heroNodeObj = heroNode;
        state.heroNodeImageObj = heroImageNode;
        }
        //console.log(state.heroNodeObj)
        //console.log(state.heroNodeImageObj)
    }, 10000)
  }

<marko-web-query|{ nodes }| name="website-scheduled-content" params=queryParams>
  <if(nodes.length)>
      <if(withHeader)>
        <marko-web-element block-name=blockName name="header">
          Top Stories
        </marko-web-element>
      </if>
      <marko-web-browser-component name="GlobalTopStoriesCarousel" props= { nodes }/>
  </if>
</marko-web-query>
